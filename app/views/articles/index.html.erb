<%- model_class = Article -%>
<div id="main-page">
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize.titleize %></h1>
</div>
<!-- <table class="table table&#45;striped"> -->
<!--   <thead> -->
<!--     <tr> -->
      <!-- <th><%#= model_class.human_attribute_name(:Title) %></th> -->
<!--       <th><%#= model_class.human_attribute_name(:Author) %></th> -->
<!--       <th><%#= model_class.human_attribute_name(:Created_at) %></th> -->
<!--       <th><%#=t '.actions', :default => t("helpers.actions") %></th> -->
<!--     </tr> -->
<!--   </thead> -->
<!--   <tbody> -->
<!-- 	  <%# @articles.each do |article| %> -->
<!-- 		  <%# user = article.user %> -->
<!--       <tr> -->
<!-- 	      <td><b><%#= link_to article.title, article_path(article), style: "color:#800000;" %></b></td> -->
<!-- 	<td><%#= link_to user.name, user_path(user), :style => "color:green;" %></td> -->
<!--         <td><%#= article.created_at.strftime("%v") %></td> -->
<!--         <td> -->
          <%# <%= link_to t('.edit', :default => t("helpers.links.edit")),
<%# # <!--                       edit_article_path(article), :class => 'btn btn&#45;default btn&#45;xs' if user.id == session[:user_id] %>
          <%# <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
# <!--                       article_path(article), -->
# <!-- 		      :method => :delete, -->
# <!-- 		      :style => "color:red;", -->
# <!--                       :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, -->
# <!--                       :class => 'btn btn&#45;xs btn&#45;default' if user.id == session[:user_id] %>
<!--         </td> -->
<!--       </tr> -->
    <%# <% end %>
<!--   </tbody> -->
<!-- </table> -->

<div id="grid" class="grid">
<% @articles.each do |art| %>
<% colsize = Random.rand(6)+2 %>

<div class="flip-container grid-item col-lg-<%= colsize %>">
  <!-- <div class="flip&#45;container"> -->

    <div class="flipper">

      <div class="front darken-image">
  <a href='<%= article_path(art) %>'>
        <h2 class="wyellow center"><%= art.title %></h2>
        <p class="white center"><%= art.content.summarize(:ratio => 20) %></p>
        </a>
        </div>

        <div class="back">
          <h2><%= art.user.name %></h2>
        </div>

    </div><!--flipper-->

  </div><!--flip-container-->
  <!-- </div> -->
        <% end %>
</div><!--grid-->

</div><!--main-page-->

<!--         <div class="row"> -->
<%# <%= link_to t('.new', :default => t("helpers.links.new")),
# <!--             new_article_path, -->
# <!--             :class => 'btn btn&#45;primary btn&#45;sm' if session[:user_id] %>
<!--           </div> -->


<script>

// $(document).ready(function(){
//   $.each($(".front"), function(){
//     var h=$(this).height();
//     $(this).parent().parent().css("height",h);
//   });
// });

function setupGrid(){
  var pckry = new Packery('.grid', {
   itemSelector: '.grid-item',
   columnWidth: 0
  });
  pckry.getItemElements().forEach(
       function(itemEle){
         var dragie = new Draggabilly(itemEle);
         pckry.bindDraggabillyEvents(dragie);
       }
     );
}
window.addEventListener('load', setupGrid, false);

  // $.each($(".grid-item"),function(){
  //   var h = $(this).children()[0].children()[0].height();
  //   $(this).height(h);
  // });
// var eles = document.getElementsByClassName("flipper");
// for(var i=0; i<eles.length; i++){
//   eles[i].ondblclick = eles[i].classList.toggle("flip");
// }

function setGridItemsHeight(){
  var items = document.getElementsByClassName("grid-item");
  for(var i=0; i<items.length; i++){
    var flipFront = items[i].querySelector(".front");
    var frontHeight = window.getComputedStyle(flipFront).height;
    items[i].style.height = frontHeight;
}
}
document.addEventListener('DOMContentLoaded', setGridItemsHeight, false);


var flip = function(){
  // hasClassName = function (a) {
  //     return new RegExp("(?:^|\\s+)" + a + "(?:\\s+|$)").test(this.className);
  // };
  //
  // addClassName = function (a) {
  //     if (!hasClassName.call(this,a)) {
  //             this.className = [this.className, a].join(" ");
  //         }
  // };
  //
  // removeClassName = function (b) {
  //     if (hasClassName.call(this,b)) {
  //             var a = this.className;
  //             this.className = a.replace(new RegExp("(?:^|\\s+)" + b + "(?:\\s+|$)", "g"), " ");
  //         }
  // };
  //
  // toggleClassName = function (a) {
  //   (hasClassName.call(this,a) ? removeClassName : addClassName).call(this, a);
  // };
  // ////////utils/////////

  var cards = document.getElementsByClassName("flipper");
  for(var i=0; i<cards.length; i++){
    cards[i].addEventListener('click', function(){
      this.classList.toggle("flipped");
    }, false);
  }
}
window.addEventListener('load', flip, false);
// var iso = new Isotope('.grid', {
// //  percentPosition: true,
//   itemSelector: '.grid-item',
//   masonry: {
//     columnWidth: 50//'.grid-sizer'
//   }
// });

//iso.on('layoutComplete', alert('It is ok!'));
//
//$('.grid-item').each(function(i, gridItem){
//  var drag = new Draggabilly(gridItem);
//  drag.on('dragEnd', function(event, pointer){
//    iso.relayout();
//  });
//});

// $('.grid-item').each(function(i, ele){
//   interact(ele).draggable(true);
// });

//interact('.grid-item').draggable(
//    true
//    {
//  inertia: true,
//  autoScroll: true,
//  onmove: window.dragMoveListener,
//  onend: iso.shuffle()
//    }
//    );
// function initPosition(){
//   var gridIts = document.getElementsByClassName('grid-item');
//   for(var i=0; i<gridIts.length; i++){
//     gridIts[i].style.top = 0;
//     gridIts[i].style.left = 0;
//   }
// }
// window.addEventListener('DOMContentLoaded', initPosition, false);


function setBGImg(){
var width = document.querySelector("body").offsetWidth;
var height = document.querySelector("body").offsetHeight;
document.querySelector("body").setAttribute("style", "background-image:url(https://unsplash.it/"+width+"/"+height+"/?random); background-size: cover;");
}
window.onload = setBGImg();

</script>
